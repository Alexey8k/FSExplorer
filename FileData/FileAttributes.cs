using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FileData
{
    // Атрибуты файла представляют собой значения метаданных, которые хранятся файловой системой на диске и используются системой и доступны разработчикам через различные API-интерфейсы файлового ввода-вывода. Список связанных API и тем см. В разделе «См. Также».
    [Flags]
    public enum FileAttributes
    {
        // Файл или каталог, который является архивным файлом или каталогом.Приложения обычно используют этот атрибут, чтобы пометить файлы для резервного копирования или удаления.
        Archive = 32, // (0x20)
        // Файл или каталог, который сжат.Для файла все данные в файле сжаты. Для каталога сжатие является значением по умолчанию для вновь создаваемых файлов и подкаталогов.
        Compressed = 2048, // (0x800)
        // Это значение зарезервировано для использования системой.
        Device = 64, // (0x40)
        // Дескриптор, который идентифицирует каталог.
        Directory = 16, // (0x10)
        // Файл или каталог, который зашифрован.Для файла все потоки данных в файле зашифрованы.Для каталога шифрование является значением по умолчанию для вновь создаваемых файлов и подкаталогов.
        Encrypted = 16384, // (0x4000)
        // Файл или каталог скрыт.Он не входит в обычный список каталогов.
        Hidden = 2, // (0x2)
        // Каталог или поток пользовательских данных настроен на целостность(поддерживается только на томах ReFS). Он не входит в обычный список каталогов.Настройка целостности сохраняется с файлом, если он переименован.Если файл копируется, для файла назначения будет установлена целостность, если для исходного файла или каталога назначения установлена целостность.
        // Windows Server 2008 R2, Windows 7, Windows Server 2008, Windows Vista, Windows Server 2003 и Windows XP: этот флаг не поддерживается до Windows Server 2012.
        IntegrityStream = 32768, // (0x8000)
        // Файл, для которого не установлены другие атрибуты.Этот атрибут действителен только при использовании отдельно.
        Normal = 128, // (0x80)
        // Файл или каталог не должны индексироваться службой индексации содержимого.
        NotContentIndexed = 8192, // (0x2000)
        // Поток пользовательских данных не должен читаться фоновым сканером целостности данных(AKA scrubber). При установке в каталог он обеспечивает только наследование.Этот флаг поддерживается только в томах Storage Spaces и ReFS.Он не входит в обычный список каталогов.
        // Windows Server 2008 R2, Windows 7, Windows Server 2008, Windows Vista, Windows Server 2003 и Windows XP: этот флаг не поддерживается до Windows 8 и Windows Server 2012.
        NoScrubData = 131072, // (0x20000)
        // Данные файла не доступны сразу.Этот атрибут указывает, что данные файла физически перемещаются в автономное хранилище.Этот атрибут используется удаленным хранилищем, которое является программным обеспечением для управления иерархическим хранилищем. Приложения не должны произвольно изменять этот атрибут.
        Offline = 4096, // (0x1000)
        // Файл только для чтения.Приложения могут читать файл, но не могут записывать или удалять его.Этот атрибут не учитывается в каталогах. Дополнительные сведения см.В разделе « Невозможно просмотреть или изменить атрибуты« Только чтение »или« Системные »папки в Windows Server 2003, Windows XP, Windows Vista или Windows 7 .
        Readonly = 1, // (0x1)
        // Когда этот атрибут установлен, это означает, что файл или каталог не полностью представлены локально.Для файла это означает, что не все его данные находятся в локальном хранилище (например, оно может быть разряжено, если некоторые данные все еще находятся в удаленном хранилище). Для каталога это означает, что часть содержимого каталога виртуализируется из другого места.Чтение файла / перечисление каталога будет дороже, чем обычно, например, это приведет к тому, что по меньшей мере часть содержимого файла / каталога будет выбрана из удаленного хранилища.Только вызывающие в режиме ядра могут установить этот бит.
        RecallOnDataAccess = 4194304, // (0x400000)
        // Этот атрибут появляется только в классах перечисления каталога(FILE_DIRECTORY_INFORMATION, FILE_BOTH_DIR_INFORMATION и т.Д.). Когда этот атрибут установлен, это означает, что файл или каталог не имеют физического представления в локальной системе; Товар виртуальный.Открытие предмета будет дороже, чем обычно, например, из-за этого по крайней мере часть будет извлечена из удаленного магазина.
        RecallOnOpen = 262144, // (0x40000)
        // Файл или каталог, с которым связана точка повторного анализа, или файл, который является символической ссылкой.
        ReparsePoint = 1024, // (0x400)
        // Файл, который является разреженным файлом.
        SparseFile = 512, // (0x200)
        // Файл или каталог, который операционная система использует часть или использует исключительно.
        System = 4, // (0x4)
        // Файл, который используется для временного хранения.Файловые системы избегают записи данных обратно в большое хранилище, если доступно достаточно кеш-памяти, потому что обычно приложение удаляет временный файл после закрытия дескриптора.В этом случае система может полностью избежать записи данных. В противном случае данные записываются после закрытия дескриптора.
        Temporary = 256, // (0x100)
        // Это значение зарезервировано для использования системой.
        Virtual = 65536, // (0x10000)
    }
}
