<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI.Dictionary"
                    xmlns:fsViewModel="clr-namespace:UI.ViewModel.FSViewModel"
                    xmlns:fscViewModel="clr-namespace:UI.ViewModel.FSViewModel.Common"
                    xmlns:uc="clr-namespace:UI.UserControl"
                    xmlns:converter="clr-namespace:UI.Converter"
                    xmlns:dts="clr-namespace:UI.DataTemplateSelector">

    <converter:IsFileConverter x:Key="IsFileConverter" />
    <converter:SizeUnitsFromEnumConverter x:Key="SizeUnitsFromEnumConverter" />

    <HierarchicalDataTemplate ItemsSource="{Binding Items,Mode=OneWay,IsAsync=True}" DataType="{x:Type fsViewModel:DirectoryViewModel}">
        <uc:FSItemView>
            <uc:FSItemView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Развернуть дочерние элементы" IsEnabled="{Binding IsLoadedItems,Mode=OneWay}"
                              Command="{Binding ExpandedAllChildFolderCommand}">
                    </MenuItem>
                    <MenuItem Header="Открыть" Command="{Binding OpenCommand}" />
                </ContextMenu>
            </uc:FSItemView.ContextMenu>
        </uc:FSItemView>
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type fsViewModel:FileViewModel}">
        <uc:FSItemView>
            <uc:FSItemView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Открыть" Command="{Binding OpenCommand}" />
                </ContextMenu>
            </uc:FSItemView.ContextMenu>
        </uc:FSItemView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type fsViewModel:DriveViewModel}">
        <uc:FSItemView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type fsViewModel:FSDummyViewModel}" />

    <DataTemplate x:Key="FSFileInfoDataTemplate">
        <uc:FSFileInfoView />
    </DataTemplate>

    <DataTemplate x:Key="FSImageFileInfoDataTemplate">
        <uc:FSImageFileInfoView />
    </DataTemplate>

    <DataTemplate x:Key="FSDirectoryDataTemplate">
        <uc:FSDirectoryInfoView />
    </DataTemplate>

    <dts:FSItemInfoDataTemplateSelector x:Key="FSItemInfoDataTemplateSelector"
                                                FSFileInfoDataTemplate="{StaticResource FSFileInfoDataTemplate}"
                                                FSImageFileInfoDataTemplate="{StaticResource FSImageFileInfoDataTemplate}"
                                                FSDirectoryInfoDataTemplate="{StaticResource FSDirectoryDataTemplate}"/>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="0 0 0 5" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}" x:Key="HiddenCombobox">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SelectedIndex" Value="0" />
    </Style>

    <Style x:Key="FSUnitInfo" TargetType="{x:Type FrameworkElement}">
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="SizeUnitsComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource FSUnitInfo}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource SizeUnitsFromEnumConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource IsFileConverter}}" Value="False">
                <DataTrigger.Setters>
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=OneWayToSource,IsAsync=True}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="IsSelected" Value="{Binding IsExpanded,Mode=TwoWay}" />
    </Style>

    <Style x:Key="FSItemTypeLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource FSUnitInfo}">
        <Setter Property="Content" Value="Тип:" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Converter={StaticResource IsFileConverter}}" Value="True">
                <Setter Property="Content" Value="Тип файла:" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FSItemLineInfo" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin" Value="0 0 0 3" />
    </Style>

    <Style TargetType="ContentControl">
        <Setter Property="Padding" Value="11" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ContentTemplateSelector" Value="{StaticResource FSItemInfoDataTemplateSelector}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Padding="{TemplateBinding Padding}" 
                                      VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Auto">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>